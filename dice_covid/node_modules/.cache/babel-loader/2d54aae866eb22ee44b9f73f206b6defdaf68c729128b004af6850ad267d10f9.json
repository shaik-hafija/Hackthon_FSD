{"ast":null,"code":"// import axios from \"axios\";\n\n// export interface CovidTimeline {\n//     cases: { [date: string]: number };\n//     deaths: { [date: string]: number };\n//     recovered: { [date: string]: number };\n// }\n\n// export interface DiseaseDetails {\n//     country: string;\n//     timeline: CovidTimeline;\n// }\n\n// export const getDiseaseData = async (location: string): Promise<DiseaseDetails> => {\n//     console.log(location)\n//     const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/\",{\n//         params:{\n//             location:location,\n//             lastdays:30\n//         }\n// });\n//     console.log(response.data)\n//     return response.data;\n// };\n\n// import axios from 'axios';\n\n// export interface CovidData {\n//   cases: number;\n//   todayDeaths: number;\n//   todayRecovered: number;\n//   country: string;\n// }\n\n// export const getResponse = async (country: string): Promise<CovidData> => {\n//   const res = await axios.get(\"https://disease.sh/v3/covid-19/countries/\",{\n//     params:\n//     {\n//         country:country\n//     }\n//   }\n//   );\n//   const data = res.data;\n//   return {\n//     cases: data.cases,\n//     todayDeaths: data.todayDeaths,\n//     todayRecovered: data.todayRecovered,\n//     country: data.country,\n//   };\n// }\n\nimport axios from 'axios';\nexport const getResponse = async country => {\n  const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${country}`);\n  const data = res.data;\n  return {\n    cases: data.cases,\n    todayDeaths: data.deaths,\n    todayRecovered: data.recovered,\n    country: data.country,\n    vaccinated: data.active\n  };\n};","map":{"version":3,"names":["axios","getResponse","country","res","get","data","cases","todayDeaths","deaths","todayRecovered","recovered","vaccinated","active"],"sources":["D:/Hackthon/myproject/src/Covid.ts"],"sourcesContent":["// import axios from \"axios\";\r\n\r\n// export interface CovidTimeline {\r\n//     cases: { [date: string]: number };\r\n//     deaths: { [date: string]: number };\r\n//     recovered: { [date: string]: number };\r\n// }\r\n\r\n// export interface DiseaseDetails {\r\n//     country: string;\r\n//     timeline: CovidTimeline;\r\n// }\r\n\r\n// export const getDiseaseData = async (location: string): Promise<DiseaseDetails> => {\r\n//     console.log(location)\r\n//     const response = await axios.get(\"https://disease.sh/v3/covid-19/historical/\",{\r\n//         params:{\r\n//             location:location,\r\n//             lastdays:30\r\n//         }\r\n// });\r\n//     console.log(response.data)\r\n//     return response.data;\r\n// };\r\n\r\n// import axios from 'axios';\r\n\r\n// export interface CovidData {\r\n//   cases: number;\r\n//   todayDeaths: number;\r\n//   todayRecovered: number;\r\n//   country: string;\r\n// }\r\n\r\n// export const getResponse = async (country: string): Promise<CovidData> => {\r\n//   const res = await axios.get(\"https://disease.sh/v3/covid-19/countries/\",{\r\n//     params:\r\n//     {\r\n//         country:country\r\n//     }\r\n//   }\r\n//   );\r\n//   const data = res.data;\r\n//   return {\r\n//     cases: data.cases,\r\n//     todayDeaths: data.todayDeaths,\r\n//     todayRecovered: data.todayRecovered,\r\n//     country: data.country,\r\n//   };\r\n// }\r\n\r\nimport axios from 'axios';\r\n\r\nexport interface CovidData {\r\n  cases: number;\r\n  todayDeaths: number;\r\n  todayRecovered: number;\r\n  country: string;\r\n  vaccinated:number;\r\n}\r\n\r\nexport const getResponse = async (country: string): Promise<CovidData> => {\r\n  const res = await axios.get(`https://disease.sh/v3/covid-19/countries/${country}`);\r\n  const data = res.data;\r\n  return {\r\n    cases: data.cases,\r\n    todayDeaths: data.deaths,\r\n    todayRecovered: data.recovered,\r\n    country: data.country,\r\n    vaccinated:data.active\r\n  };\r\n}\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAUzB,OAAO,MAAMC,WAAW,GAAG,MAAOC,OAAe,IAAyB;EACxE,MAAMC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,4CAA2CF,OAAQ,EAAC,CAAC;EAClF,MAAMG,IAAI,GAAGF,GAAG,CAACE,IAAI;EACrB,OAAO;IACLC,KAAK,EAAED,IAAI,CAACC,KAAK;IACjBC,WAAW,EAAEF,IAAI,CAACG,MAAM;IACxBC,cAAc,EAAEJ,IAAI,CAACK,SAAS;IAC9BR,OAAO,EAAEG,IAAI,CAACH,OAAO;IACrBS,UAAU,EAACN,IAAI,CAACO;EAClB,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}