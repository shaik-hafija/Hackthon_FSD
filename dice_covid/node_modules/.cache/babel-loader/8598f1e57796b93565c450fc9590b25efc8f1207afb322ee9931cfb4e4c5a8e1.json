{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hackthon\\\\myproject\\\\src\\\\CovidRes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getResponse } from './Covid';\nimport './CovidRes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst countries = ['China', 'USA', 'Italy', 'Spain', 'Germany', 'France', 'Iran', 'UK', 'Colombia', 'Chile', 'Japan', 'South Korea', 'Indonesia'];\n//Sri Lanka, Bangladesh, China, and Nepal.\nconst top5Countries = ['Nepal', 'India', 'China', 'Bangladesh', 'Sri Lanka'];\nexport const CovidRes = () => {\n  _s();\n  const [covidData, setCovidData] = useState(null);\n  const [selectedCountry, setSelectedCountry] = useState('China');\n  const [top5Data, setTop5Data] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await getResponse(selectedCountry);\n      setCovidData(response);\n    };\n    fetchData();\n  }, [selectedCountry]);\n  useEffect(() => {\n    const fetchTop5Data = async () => {\n      const responses = await Promise.all(top5Countries.map(country => getResponse(country)));\n      setTop5Data(responses);\n    };\n    fetchTop5Data();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"covid-page\",\n    style: {\n      textAlign: \"center\",\n      marginTop: \"40px\",\n      marginBottom: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"40px\",\n        color: \"red\"\n      },\n      children: \"Vacinated and Affected::Page2&Page1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      style: {\n        textAlign: \"center\",\n        marginTop: \"40px\"\n      },\n      children: [\"Covid Data for \", covidData === null || covidData === void 0 ? void 0 : covidData.country]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"country-select\",\n        children: \"Select a Country:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"country-select\",\n        value: selectedCountry,\n        onChange: e => setSelectedCountry(e.target.value),\n        children: countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: country,\n          children: country\n        }, country, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Cases: \", covidData === null || covidData === void 0 ? void 0 : covidData.cases]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Vaccinated \", covidData === null || covidData === void 0 ? void 0 : covidData.vaccinated]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginTop: \"40px\",\n        color: \"red\"\n      },\n      children: \"Neighboring Countries:Page3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Cases\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total  Deaths\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Recovered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: top5Data.map(data => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.cases\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.todayDeaths\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data.todayRecovered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, data.country, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(CovidRes, \"ypUn1SIvAiSiLkf8f2dxTjUk8nY=\");\n_c = CovidRes;\nvar _c;\n$RefreshReg$(_c, \"CovidRes\");","map":{"version":3,"names":["React","useEffect","useState","getResponse","jsxDEV","_jsxDEV","countries","top5Countries","CovidRes","_s","covidData","setCovidData","selectedCountry","setSelectedCountry","top5Data","setTop5Data","fetchData","response","fetchTop5Data","responses","Promise","all","map","country","className","style","textAlign","marginTop","marginBottom","children","color","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","cases","vaccinated","data","todayDeaths","todayRecovered","_c","$RefreshReg$"],"sources":["D:/Hackthon/myproject/src/CovidRes.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getResponse, CovidData } from './Covid';\r\nimport axios from 'axios';\r\nimport './CovidRes.css'\r\n\r\nconst countries = [\r\n  'China', 'USA', 'Italy', 'Spain', 'Germany', 'France', 'Iran', 'UK', \r\n  'Colombia', 'Chile', 'Japan', 'South Korea', 'Indonesia'\r\n];\r\n//Sri Lanka, Bangladesh, China, and Nepal.\r\nconst top5Countries = ['Nepal', 'India', 'China', 'Bangladesh', 'Sri Lanka'];\r\n\r\nexport const CovidRes = () => {\r\n  const [covidData, setCovidData] = useState<CovidData | null>(null);\r\n  const [selectedCountry, setSelectedCountry] = useState<string>('China');\r\n  const [top5Data, setTop5Data] = useState<CovidData[]>([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getResponse(selectedCountry);\r\n      setCovidData(response);\r\n    };\r\n    fetchData();\r\n  }, [selectedCountry]);\r\n\r\n  useEffect(() => {\r\n    const fetchTop5Data = async () => {\r\n      const responses = await Promise.all(top5Countries.map((country) => getResponse(country)));\r\n      setTop5Data(responses);\r\n    };\r\n    fetchTop5Data();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"covid-page\" style={{textAlign:\"center\",marginTop:\"40px\",marginBottom:\"40px\",}}>\r\n            <h2 style={{textAlign:\"center\",marginTop:\"40px\",color:\"red\"}}>Vacinated and Affected::Page2&Page1</h2>\r\n\r\n      <h1 className=\"title\" style={{textAlign:\"center\",marginTop:\"40px\"}}>Covid Data for {covidData?.country}</h1>\r\n      <div className=\"dropdown-container\">\r\n        <label htmlFor=\"country-select\">Select a Country:</label>\r\n        <select id=\"country-select\" value={selectedCountry} onChange={(e) => setSelectedCountry(e.target.value)}>\r\n          {countries.map((country) => (\r\n            <option key={country} value={country}>\r\n              {country}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"data-container\">\r\n        <p >Total Cases: {covidData?.cases}</p>\r\n        <p>Total Vaccinated {covidData?.vaccinated}</p>\r\n      </div>\r\n      <hr></hr>\r\n      <h2 style={{textAlign:\"center\",marginTop:\"40px\",color:\"red\"}}>Neighboring Countries:Page3</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Country</th>\r\n            <th>Total Cases</th>\r\n            <th>Total  Deaths</th>\r\n            <th>Total Recovered</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {top5Data.map((data) => (\r\n            <tr key={data.country}>\r\n              <td>{data.country}</td>\r\n              <td>{data.cases}</td>\r\n              <td>{data.todayDeaths}</td>\r\n              <td>{data.todayRecovered}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}